// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: error.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorProto represents a serialized error in Protocol Buffers format.
type ErrorProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Fields        map[string]*FieldValue `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Stack         []*StackFrame          `protobuf:"bytes,4,rep,name=stack,proto3" json:"stack,omitempty"`
	Causes        []*CauseProto          `protobuf:"bytes,5,rep,name=causes,proto3" json:"causes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorProto) Reset() {
	*x = ErrorProto{}
	mi := &file_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorProto) ProtoMessage() {}

func (x *ErrorProto) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorProto.ProtoReflect.Descriptor instead.
func (*ErrorProto) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorProto) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorProto) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ErrorProto) GetFields() map[string]*FieldValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ErrorProto) GetStack() []*StackFrame {
	if x != nil {
		return x.Stack
	}
	return nil
}

func (x *ErrorProto) GetCauses() []*CauseProto {
	if x != nil {
		return x.Causes
	}
	return nil
}

// FieldValue represents a field value that can be of various types.
type FieldValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*FieldValue_StringValue
	//	*FieldValue_IntValue
	//	*FieldValue_DoubleValue
	//	*FieldValue_BoolValue
	//	*FieldValue_BytesValue
	Value         isFieldValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldValue) Reset() {
	*x = FieldValue{}
	mi := &file_error_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValue) ProtoMessage() {}

func (x *FieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValue.ProtoReflect.Descriptor instead.
func (*FieldValue) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{1}
}

func (x *FieldValue) GetValue() isFieldValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FieldValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *FieldValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *FieldValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *FieldValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *FieldValue) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

type isFieldValue_Value interface {
	isFieldValue_Value()
}

type FieldValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type FieldValue_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type FieldValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type FieldValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type FieldValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

func (*FieldValue_StringValue) isFieldValue_Value() {}

func (*FieldValue_IntValue) isFieldValue_Value() {}

func (*FieldValue_DoubleValue) isFieldValue_Value() {}

func (*FieldValue_BoolValue) isFieldValue_Value() {}

func (*FieldValue_BytesValue) isFieldValue_Value() {}

// StackFrame represents a single frame in a stack trace.
type StackFrame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Func          string                 `protobuf:"bytes,1,opt,name=func,proto3" json:"func,omitempty"`
	File          string                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Line          int32                  `protobuf:"varint,3,opt,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StackFrame) Reset() {
	*x = StackFrame{}
	mi := &file_error_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackFrame) ProtoMessage() {}

func (x *StackFrame) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackFrame.ProtoReflect.Descriptor instead.
func (*StackFrame) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{2}
}

func (x *StackFrame) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *StackFrame) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *StackFrame) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

// CauseProto represents a wrapped error cause.
type CauseProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Fields        map[string]*FieldValue `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Stack         []*StackFrame          `protobuf:"bytes,5,rep,name=stack,proto3" json:"stack,omitempty"`
	Causes        []*CauseProto          `protobuf:"bytes,6,rep,name=causes,proto3" json:"causes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CauseProto) Reset() {
	*x = CauseProto{}
	mi := &file_error_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CauseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CauseProto) ProtoMessage() {}

func (x *CauseProto) ProtoReflect() protoreflect.Message {
	mi := &file_error_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CauseProto.ProtoReflect.Descriptor instead.
func (*CauseProto) Descriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{3}
}

func (x *CauseProto) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CauseProto) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CauseProto) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CauseProto) GetFields() map[string]*FieldValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CauseProto) GetStack() []*StackFrame {
	if x != nil {
		return x.Stack
	}
	return nil
}

func (x *CauseProto) GetCauses() []*CauseProto {
	if x != nil {
		return x.Causes
	}
	return nil
}

var File_error_proto protoreflect.FileDescriptor

const file_error_proto_rawDesc = "" +
	"\n" +
	"\verror.proto\x12\x06errdef\"\x97\x02\n" +
	"\n" +
	"ErrorProto\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x126\n" +
	"\x06fields\x18\x03 \x03(\v2\x1e.errdef.ErrorProto.FieldsEntryR\x06fields\x12(\n" +
	"\x05stack\x18\x04 \x03(\v2\x12.errdef.StackFrameR\x05stack\x12*\n" +
	"\x06causes\x18\x05 \x03(\v2\x12.errdef.CauseProtoR\x06causes\x1aM\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.errdef.FieldValueR\x05value:\x028\x01\"\xc2\x01\n" +
	"\n" +
	"FieldValue\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12#\n" +
	"\fdouble_value\x18\x03 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x04 \x01(\bH\x00R\tboolValue\x12!\n" +
	"\vbytes_value\x18\x05 \x01(\fH\x00R\n" +
	"bytesValueB\a\n" +
	"\x05value\"H\n" +
	"\n" +
	"StackFrame\x12\x12\n" +
	"\x04func\x18\x01 \x01(\tR\x04func\x12\x12\n" +
	"\x04file\x18\x02 \x01(\tR\x04file\x12\x12\n" +
	"\x04line\x18\x03 \x01(\x05R\x04line\"\xab\x02\n" +
	"\n" +
	"CauseProto\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x126\n" +
	"\x06fields\x18\x04 \x03(\v2\x1e.errdef.CauseProto.FieldsEntryR\x06fields\x12(\n" +
	"\x05stack\x18\x05 \x03(\v2\x12.errdef.StackFrameR\x05stack\x12*\n" +
	"\x06causes\x18\x06 \x03(\v2\x12.errdef.CauseProtoR\x06causes\x1aM\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.errdef.FieldValueR\x05value:\x028\x01B2Z0github.com/shiwano/errdef/examples/protobuf;mainb\x06proto3"

var (
	file_error_proto_rawDescOnce sync.Once
	file_error_proto_rawDescData []byte
)

func file_error_proto_rawDescGZIP() []byte {
	file_error_proto_rawDescOnce.Do(func() {
		file_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_error_proto_rawDesc), len(file_error_proto_rawDesc)))
	})
	return file_error_proto_rawDescData
}

var file_error_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_error_proto_goTypes = []any{
	(*ErrorProto)(nil), // 0: errdef.ErrorProto
	(*FieldValue)(nil), // 1: errdef.FieldValue
	(*StackFrame)(nil), // 2: errdef.StackFrame
	(*CauseProto)(nil), // 3: errdef.CauseProto
	nil,                // 4: errdef.ErrorProto.FieldsEntry
	nil,                // 5: errdef.CauseProto.FieldsEntry
}
var file_error_proto_depIdxs = []int32{
	4, // 0: errdef.ErrorProto.fields:type_name -> errdef.ErrorProto.FieldsEntry
	2, // 1: errdef.ErrorProto.stack:type_name -> errdef.StackFrame
	3, // 2: errdef.ErrorProto.causes:type_name -> errdef.CauseProto
	5, // 3: errdef.CauseProto.fields:type_name -> errdef.CauseProto.FieldsEntry
	2, // 4: errdef.CauseProto.stack:type_name -> errdef.StackFrame
	3, // 5: errdef.CauseProto.causes:type_name -> errdef.CauseProto
	1, // 6: errdef.ErrorProto.FieldsEntry.value:type_name -> errdef.FieldValue
	1, // 7: errdef.CauseProto.FieldsEntry.value:type_name -> errdef.FieldValue
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_error_proto_init() }
func file_error_proto_init() {
	if File_error_proto != nil {
		return
	}
	file_error_proto_msgTypes[1].OneofWrappers = []any{
		(*FieldValue_StringValue)(nil),
		(*FieldValue_IntValue)(nil),
		(*FieldValue_DoubleValue)(nil),
		(*FieldValue_BoolValue)(nil),
		(*FieldValue_BytesValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_error_proto_rawDesc), len(file_error_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_error_proto_goTypes,
		DependencyIndexes: file_error_proto_depIdxs,
		MessageInfos:      file_error_proto_msgTypes,
	}.Build()
	File_error_proto = out.File
	file_error_proto_goTypes = nil
	file_error_proto_depIdxs = nil
}
